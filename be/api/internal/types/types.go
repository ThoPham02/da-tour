// Code generated by goctl. DO NOT EDIT.
package types

type Result struct {
	Code    int    `json:"code"`    //    Result code: 0 is success. Otherwise, getting an error
	Message string `json:"message"` // Result message: detail response code
}

type User struct {
	UserID   int64  `json:"userID"`
	FullName string `json:"fullName"`
	Email    string `json:"email"`
	Role     int64  `json:"role"`
	Status   int64  `json:"status"`
}

type Tour struct {
	ID          int64     `json:"id"`
	Name        string    `json:"name"`
	BgUrl       string    `json:"bgUrl"`
	Description string    `json:"description"`
	Destination int64     `json:"destination"`
	NumberDay   int64     `json:"numberDay"`
	Overview    string    `json:"overview"`
	Utils       []Util    `json:"utils"`
	Includes    []Include `json:"includes"`
	Journeys    []Journey `json:"journey"`
	Price       int64     `json:"price"`
	TimeStart   int64     `json:"timeStart"`
	Quantity    int64     `json:"quantity"`
	Remain      int64     `json:"remain"`
}

type Util struct {
	ID     int64  `json:"id"`
	Title  string `json:"title"`
	Detail string `json:"detail"`
}

type Include struct {
	ID     int64  `json:"id"`
	Title  string `json:"title"`
	Detail string `json:"detail"`
}

type Journey struct {
	ID     int64  `json:"id"`
	Detail string `json:"detail"`
}

type LoginReq struct {
	Email    string `form:"email"`    // user_name
	Password string `form:"password"` //  password
}

type LoginRes struct {
	Result Result `json:"result"`
	Token  string `json:"token"` // jwt token for api
	User   User   `json:"user"`  // Account info
}

type RegisterReq struct {
	Fullname string `form:"fullname"`
	Email    string `form:"email"`
	Password string `form:"password"`
}

type RegisterRes struct {
	Result Result `json:"result"`
	Token  string `json:"token"` // jwt token for api
	User   User   `json:"user"`  // Account info
}
