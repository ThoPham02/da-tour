// Code generated by goctl. DO NOT EDIT.
package types

type Result struct {
	Code    int    `json:"code"`    //    Result code: 0 is success. Otherwise, getting an error
	Message string `json:"message"` // Result message: detail response code
}

type User struct {
	UserID   int64  `json:"userID"`
	FullName string `json:"fullName"`
	Email    string `json:"email"`
	Role     int64  `json:"role"`
	Status   int64  `json:"status"`
}

type Tour struct {
	ID            int64       `json:"id"`
	Name          string      `json:"name"`
	Image         string      `json:"image"`
	Description   string      `json:"description"`
	Duration      int64       `json:"duration"`
	Location      int64       `json:"location"`
	Overview      string      `json:"overview"`
	Activities    []Activity  `json:"activities"`
	Services      []Service   `json:"services"`
	Itineraries   []Itinerary `json:"itineraries"`
	Price         float64     `json:"price"`
	DepartureDate int64       `json:"departureDate"`
	Quantity      int64       `json:"quantity"`
	Remain        int64       `json:"remain"`
	Status        int64       `json:"status"`
}

type Activity struct {
	ID     int64  `json:"id"`
	Title  string `json:"title"`
	Detail string `json:"detail"`
}

type Service struct {
	ID     int64  `json:"id"`
	Title  string `json:"title"`
	Detail string `json:"detail"`
}

type Itinerary struct {
	ID          int64  `json:"id"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

type Order struct {
	ID            int64   `json:"id"`
	Code          string  `json:"code"`
	TourID        int64   `json:"tourID"`
	Tour          Tour    `json:"tour"`
	TourName      string  `json:"tourName"`
	DepartureDate int64   `json:"departureDate"`
	UserID        int64   `json:"userID"`
	FullName      string  `json:"fullName"`
	Email         string  `json:"email"`
	Phone         string  `json:"phone"`
	Status        int64   `json:"status"`
	Quantity      int64   `json:"quantity"`
	TotalPrice    float64 `json:"totalPrice"`
	PaymentStatus int64   `json:"paymentStatus"`
	CreateDate    int64   `json:"createDate"`
}

type Payment struct {
	ID          int64   `json:"id"`
	OrderID     int64   `json:"orderID"`
	OrderCode   string  `json:"orderCode"`
	Method      int64   `json:"method"`
	PaymentDate int64   `json:"paymentDate"`
	Amount      float64 `json:"amount"`
	Status      int64   `json:"status"`
	Url         string  `json:"url"`
}

type LoginReq struct {
	Email    string `form:"email"`    // user_name
	Password string `form:"password"` //  password
}

type LoginRes struct {
	Result Result `json:"result"`
	Token  string `json:"token"` // jwt token for api
	User   User   `json:"user"`  // Account info
}

type RegisterReq struct {
	Fullname string `form:"fullname"`
	Email    string `form:"email"`
	Password string `form:"password"`
}

type RegisterRes struct {
	Result Result `json:"result"`
	Token  string `json:"token"` // jwt token for api
	User   User   `json:"user"`  // Account info
}

type SendMessageReq struct {
}

type SendMessageRes struct {
}

type SearchTourReq struct {
	Search        string `form:"search, optional"`
	Location      int64  `form:"location, optional"`
	DepartureDate int64  `form:"departureDate, optional"`
	Limit         int64  `form:"limit, optional"`
	Offset        int64  `form:"offset, optional"`
}

type SearchTourRes struct {
	Tours  []Tour `json:"tours"`
	Total  int64  `json:"total"`
	Result Result `json:"result"`
}

type TourDetailReq struct {
	TourID int64 `path:"tourID"`
}

type TourDetailRes struct {
	Tour   Tour   `json:"tour"`
	Result Result `json:"result"`
}

type UpdateUserReq struct {
}

type UpdateUserRes struct {
}

type UploadFileReq struct {
}

type UploadFileRes struct {
	Result Result `json:"result"`
	Url    string `json:"url"`
}

type CreateTourReq struct {
	Image         string  `form:"image"`
	Name          string  `form:"name"`
	Description   string  `form:"description"`
	Duration      int64   `form:"duration"`
	Location      int64   `form:"location"`
	Overview      string  `form:"overview"`
	Activities    string  `form:"activities"`
	Services      string  `form:"services"`
	Itinerary     string  `form:"itinerary"`
	Price         float64 `form:"price"`
	Seats         int64   `form:"seats"`
	DepartureDate int64   `form:"departureDate"`
}

type CreateTourRes struct {
	Result Result `json:"result"`
}

type UpdateTourReq struct {
	TourID        int64   `path:"tourID"`
	Image         string  `form:"image"`
	Name          string  `form:"name"`
	Description   string  `form:"description"`
	Duration      int64   `form:"duration"`
	Location      int64   `form:"location"`
	Overview      string  `form:"overview"`
	Activities    string  `form:"activities"`
	Services      string  `form:"services"`
	Itinerary     string  `form:"itinerary"`
	Price         float64 `form:"price"`
	Seats         int64   `form:"seats"`
	DepartureDate int64   `form:"departureDate"`
}

type UpdateTourRes struct {
	Result Result `json:"result"`
}

type CreateOrderReq struct {
	TourID   int64  `form:"tourID"`
	UserID   int64  `form:"userID,optional"`
	Fullname string `form:"fullname"`
	Email    string `form:"email"`
	Phone    string `form:"phone"`
	Seats    int64  `form:"seats"`
}

type CreateOrderRes struct {
	Result Result `json:"result"`
}

type GetOrderReq struct {
	OrderID int64 `path:"orderID"`
}

type GetOrderRes struct {
	Result   Result    `json:"result"`
	Order    Order     `json:"order"`
	Tour     Tour      `json:"tour"`
	Payments []Payment `json:"payments"`
}

type FilterOrderReq struct {
	UserID int64 `form:"userID,optional"`
	TourID int64 `form:"tourID,optional"`
	Status int64 `form:"status,optional"`
	Limit  int64 `form:"limit,optional"`
	Offset int64 `form:"offset,optional"`
}

type FilterOrderRes struct {
	Result Result  `json:"result"`
	Orders []Order `json:"orders"`
	Total  int64   `json:"total"`
}

type UpdateOrderStatusReq struct {
	OrderID int64 `path:"orderID"`
	Status  int64 `form:"status"`
}

type UpdateOrderStatusRes struct {
	Result Result `json:"result"`
}

type UpdateOrderReq struct {
	OrderID  int64  `path:"orderID"`
	TourID   int64  `form:"tourID"`
	UserID   int64  `form:"userID"`
	Fullname string `form:"fullname"`
	Email    string `form:"email"`
	Phone    string `form:"phone"`
	Seats    int64  `form:"seats"`
}

type UpdateOrderRes struct {
	Result Result `json:"result"`
}

type CreatePaymentReq struct {
	OrderID     int64   `form:"orderID"`
	Method      int64   `form:"method"`
	PaymentDate int64   `form:"paymentDate"`
	Amount      float64 `form:"amount"`
	Url         string  `form:"url"`
	Status      int64   `form:"status"`
}

type CreatePaymentRes struct {
	Result Result `json:"result"`
}

type FilterPaymentReq struct {
	OrderID int64 `form:"orderID"`
	UserID  int64 `form:"userID"`
	Status  int64 `form:"status"`
	Limit   int64 `form:"limit"`
	Offset  int64 `form:"offset"`
}

type FilterPaymentRes struct {
	Result   Result    `json:"result"`
	Payments []Payment `json:"payments"`
	Total    int64     `json:"total"`
}

type UpdatePaymentReq struct {
	PaymentID     int64  `path:"paymentID"`
	OrderID       int64  `form:"orderID"`
	OrderCode     string `form:"orderCode"`
	PaymentMethod string `form:"paymentMethod"`
	Amount        int64  `form:"amount"`
}

type UpdatePaymentRes struct {
	Result Result `json:"result"`
}

type DeletePaymentReq struct {
	PaymentID int64 `path:"paymentID"`
}

type DeletePaymentRes struct {
	Result Result `json:"result"`
}

type UpdatePaymentStatusReq struct {
	PaymentID int64 `path:"paymentID"`
	Status    int64 `form:"status"`
}

type UpdatePaymentStatusRes struct {
	Result Result `json:"result"`
}
