info (
	title:   "main api"
	author:  "thopb"
	email:   "thoahlgbg2002@gamil.com"
	version: "1.0"
)

// Model
type (
	Result {
		Code    int    `json:"code"`    //    Result code: 0 is success. Otherwise, getting an error
		Message string `json:"message"` // Result message: detail response code
	}
)

type (
	User {
		UserID   int64  `json:"userID"`
		FullName string `json:"fullName"`
		Email    string `json:"email"`
		Role     int64  `json:"role"`
		Status   int64  `json:"status"`
	}

	Tour {
		ID          int64     `json:"id"`
		Name        string    `json:"name"`
		BgUrl       string    `json:"bgUrl"`
		Description string    `json:"description"`
		Destination int64     `json:"destination"`
		NumberDay   int64     `json:"numberDay"`
		Overview    string    `json:"overview"`
		Utils       []Util    `json:"utils"`
		Includes    []Include `json:"includes"`
		Journeys    []Journey `json:"journey"`
		Price       int64     `json:"price"`
		TimeStart   int64     `json:"timeStart"`
		Quantity    int64     `json:"quantity"`
		Remain      int64     `json:"remain"`
	}

	Util {
		ID     int64  `json:"id"`
		Title  string `json:"title"`
		Detail string `json:"detail"`
	}

	Include {
		ID     int64  `json:"id"`
		Title  string `json:"title"`
		Detail string `json:"detail"`
	}

	Journey {
		ID     int64  `json:"id"`
		Detail string `json:"detail"`
	}
)

// API

type (
	LoginReq {
		Email    string `form:"email"`    // user_name
		Password string `form:"password"` //  password
	}
	LoginRes {
		Result Result `json:"result"`
		Token  string `json:"token"` // jwt token for api
		User   User   `json:"user"`  // Account info
	}

	RegisterReq {
		Fullname string `form:"fullname"`
		Email    string `form:"email"`
		Password string `form:"password"`
	}
	RegisterRes {
		Result Result `json:"result"`
		Token  string `json:"token"` // jwt token for api
		User   User   `json:"user"`  // Account info
	}
)

@server (
	prefix:     /
)
service main-api {
	@doc (
		summary: "User Login"
	)
	@handler Login
	post /login (LoginReq) returns (LoginRes)

	@doc (
		summary: "User Register"
	)
	@handler Register
	post /register (RegisterReq) returns (RegisterRes)
}